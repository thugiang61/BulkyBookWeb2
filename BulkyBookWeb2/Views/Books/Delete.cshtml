@using BulkyBookWeb2.Models.Enums
@model BulkyBookWeb2.Models.Book

@{
    ViewData["Title"] = "Delete Book";
}

<h1>Delete</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            <b>@Html.DisplayFor(model => model.Name)</b>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Author)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Genre == null)
            {
                <span>&lt;Not entered genre&gt;</span>
            }
            else
            {
                @Html.DisplayFor(model => model.Genre)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd class="col-sm-10">
            @if (!Model.StartDate.HasValue)
            {
                <span>&lt;Not started&gt;</span>
            }
            else
            {
                @Html.DisplayFor(model => model.StartDate)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FinishDate)
        </dt>
        <dd class="col-sm-10">
            @if (!Model.FinishDate.HasValue)
            {
                <span>&lt;Not finished&gt;</span>
            }
            else
            {
                @Html.DisplayFor(model => model.FinishDate)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Review)
        </dt>
        <dd class="col-sm-10 w-75">
            @if (Model.Review == null)
            {
                <span>&lt;Not reviewed&gt;</span>
            }
            else
            {
                @Html.DisplayFor(model => model.Review)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OtherNote)
        </dt>
        <dd class="col-sm-10 w-75">
            @if (Model.OtherNote == null)
            {
                <span>&lt;Not entered note&gt;</span>
            }
            else
            {
                @Html.DisplayFor(model => model.OtherNote)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Price == null)
            {
                <span>&lt;Not entered price&gt;</span>
            }
            else
            {
                @string.Format("{0:N0}", Model.Price) <span>VND</span>
            }
        </dd>
    </dl>
</div>
<div>
    <form asp-action="DeleteConfirmed">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger m-2" />
        <a onclick="history.go(-1)" class="btn btn-primary">Back to List</a>
        @*<a asp-action="Index" class="btn btn-primary">Back to List</a>*@
    </form>

    @*ko hieu s doan duoi nay lai ko dc tuong tu nhu trang Details vs Index nhi,
        chac la do 2 the a o duoi la goi den view dc th, chu con goi den action ma 
        lam tdoi dlieu thi pjai thong qua the form?!?
    *@
    @*<a asp-action="DeleteConfirmed" asp-route-id="@Model.Id" class="btn btn-danger m-2">Delete</a>
    <a asp-action="Index" class="btn btn-primary">Back to List</a>*@
</div>